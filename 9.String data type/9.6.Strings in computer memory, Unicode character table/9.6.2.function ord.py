Функция ord

Функция ord позволяет определить код некоторого символа в таблице символов Unicode. Аргументом данной функции является одиночный символ.
Результатом выполнения следующего кода:
num1 = ord('A')
num2 = ord('B')
num3 = ord('a') 
print(num1, num2, num3)

будет:
65 66 97

Обратите внимание, что функция ord принимает именно одиночный символ. Если попытаться передать строку, содержащую более одного символа:
num = ord('Abc')
print(num)

мы получим ошибку времени выполнения:
TypeError: ord() expected a character, but string of length 3 found
    Название функции ord происходит от английского слова order — порядок.

--------------------------------------------------------------------------------------------------------------------------------------------------------------
Функция chr

Функция chr позволяет определить по коду символа сам символ. Аргументом данной функции является численный код.
Результатом выполнения следующего кода:
chr1 = chr(65)
chr2 = chr(75)
chr3 = chr(110) 
print(chr1, chr2, chr3)

будет:
A K n
     Название функции chr происходит от английского слова char — символ.

Функции ord и chr часто работают в паре. Мы можем использовать следующий код для вывода всех заглавных букв английского алфавита:
for i in range(26):
    print(chr(ord('A') + i))
Вызов функции ord('A') возвращает код символа «A», который равен 65. Далее на каждой итерации цикла, к данному коду прибавляется 
значение переменной i = 0, 1, 2, ..., 25, а затем полученный код преобразуется в символ с помощью вызова функции chr.

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Примечания

Примечание. Функции ord и chr являются взаимнообратными. Для них выполнены равенства:
chr(ord('A')) = 'A', ord(chr(65)) = 65.
